;; this is my karabiner setup on my personal MBA
;; I learned to use Karabiner and goku from many sources but special thanks to @nikitavoloboev and @ttscoff
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    ;; !  | means mandatory -   modifier(s) alone when pressend change behavior
    ;; #  | means optional  -   modifiers are optional (but atleast one necessary)

    ;; :!Ca is keycode :a and prefix a with !C

    ;; C  | left_command
    ;; T  | left_control
    ;; O  | left_option
    ;; S  | left_shift
    ;; F  | fn
    ;; Q  | right_command
    ;; W  | right_control
    ;; E  | right_option
    ;; R  | right_shift
    ;; P  | caps_lock

    ;; ## | optional any (this has no effect when used on the RHS; only LHS)
    ;; !! | command + control + optional + shift (hyper)

    ;; to understand better how modifiers work in karabiner
    ;; karabiner definition of mandatory and optional
    ;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/modifiers/


    ;; need to prefix C T O S F with ! or #
    ;;
    ;; code for all this:
    ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/b9b334a187379f9bc8182ad59e2cca2a1789e9c0/src/karabiner_configurator/keys.clj#L68
{
:profiles
 {:goku {:default true
         :sim 50
         :delay 80
         :alone 120
         :held 70
 }
} ;;profiles


:devices{
        :internal [{:vendor_id 1452 :product_id 657}]
        :fortech [{:vendor_id 7247 :product_id 38}]
         } ;;devices
 :tos {;  :same_wind_app   {:key :grave_accent_and_tilde :modi [:left_command] :lazy true}
       :prev_app        {:key :tab :modi [:left_command] :lazy true}
       :left_paren      {:key :8 :modi [:left_shift] :lazy true}
       :right_paren     {:key :9 :modi [:left_shift] :lazy true}
       :home_dir        [{:key :grave_accent_and_tilde :modi [:left_shift] :lazy true}
                         {:key :slash}]
;        :regex_match_any [{:key :period}
;                          {:key :8 :modi [:left_shift] :lazy true}]
;        :select_cn       {:select_input_source
;                          {:input_mode_id   ""
;                           :input_source_id "com.apple.keylayout.US"
;                           :language        "en"}}
;        :select_abc      {:select_input_source
;                          {:input_source_id "^com\\.apple\\.keylayout\\.ABC$"}
       } ;;tos
 :templates {
             :alfred "osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
             :open "open \"%s\""
             :applescript "osascript '~/Library/Mobile Documents/com~apple~ScriptEditor2/Documents/%s'"
             :hs "open -g hammerspoon://%s"
             :launch "osascript -e 'tell application \"%s\" to activate'"
             :show "osascript -e 'set appName to \"%s\"\nset startIt to false\ntell application \"System Events\"\n  if not (exists process appName) then\n    set startIt to true\n  else\n    set frontmost of process appName to true\n  end if\nend tell\nif startIt then\n  tell application appName to activate\nend if'\n"
             :toggle "osascript -e 'set appName to \"%s\"\nset startIt to false\ntell application \"System Events\"\n  if not (exists process appName) then\n    set startIt to true\n  else if frontmost of process appName then\n    set visible of process appName to false\n  else\n    set frontmost of process appName to true\n  end if\nend tell\nif startIt then\n  tell application appName to activate\nend if'"
             :type "osascript -e 'tell application \"System Events\" to keystroke \"%s\" as text'"
             } ;;templates
 :applications {
                :code ["^com.microsoft.VSCode$"]
                ;; :safari ["^com\\.apple\\.Safari$"]
                ;; :browser ["^com\\.apple\\.Safari$"]
                :java ["^com.jetbrains.intellij.ce$"]
                ;; :vimModeOn ["^com.microsoft.VSCode$" "^com.jetbrains.intellij.ce$"]
                } ;;applications
 :layers {
          :hyper {:key :caps_lock :alone {:key :escape}} ; navigation, shortcuts
        ;;   :mouse {:key :tab}
          :workmandead {:key :spacebar}
         } ;;layers
 :simlayers {;    
; *launchers 
             :launch-mode {:key :l} ; launch frequnetly used apps
             :s-key {:key :s} ; social media apps
             :u-key {:key :u} ; launch utilities
             :o-key {:key :o} ; open websites
; *shortcuts  
             :accent {:key :p} ; accent keys
             :accent2 {:key :open_bracket}
             :accent3 {:key :close_bracket}
             :w-key {:key :w} ; window management
             :d-key {:key :d} ; essentials
             :m-key {:key :m} ; markdown mode
        ;;      :q-key {:key :q} ; control mode
             :dot-mode {:key :period}
             :F-keys {:key :comma}
        ;;      :focus-mode {:key :f}
             } ;;simlayers
;;;;;;;;;;;;;;;;
 :main [;;; 
        ;;4Tech keyboard settings
        ;; {:des "changing control to command" :rules [:fortech [:left_control :left_command nil {:alone :!Ttab}]]}
        ;; {:des "changing control to command" :rules [:fortech [:right_control :right_command]]}
        ;; {:des "changing windows to control" :rules [:fortech :!vimModeOn [:left_command :left_control nil {:alone :!Ctab}]]}
        ;; {:des "changing windows to control" :rules [:fortech [:right_command :right_control nil {:alone :f13}]]}
        {:des "í to 0" :rules [:fortech [:##non_us_backslash :grave_accent_and_tilde]]}
        {:des "0 to í" :rules [:fortech [:##grave_accent_and_tilde :non_us_backslash]]}
        {:des "4Tech app key to FN" :rules [[:application :fn [:fortech]]]}

        {:des "right command to f13 (Alfred) if alone" :rules [[:##right_command :right_command nil {:alone :f13}]]}
        {:des "left_control → ctrl+tab if alone unless VSCode or IntelliJ is in front" :rules [:internal :!vimModeOn [:##left_control :left_control nil {:alone :!Ttab}]]} ; change application tabs
        {:des "left cmd → cmd+tab if alone" :rules [:internal [:##left_command :left_command nil {:alone :!Ctab}]]} ; change applications
        {:des "right_option to [] or alt+shift" :rules [[:##right_option :!Sleft_option nil {:alone [:!O8 :!O9 :left_arrow]}]]}
        {:des "left_option to {} if alone" :rules [[:left_option :left_option nil {:alone [:!O7 :!O0 :left_arrow]}]]}
        {:des "right_shift to () if alone, unless VSCode or IntelliJ is in front" :rules [:!vimModeOn [:##right_shift :right_shift nil {:alone [:!S8 :!S9 :left_arrow]}]]} ; not compatible with VSCode's & IntelliJ's vim extension
        ;; {:des "q for ctlr" :rules [[:q :left_control nil {:alone :q}]]}

        ;;turning off arrow keys
        ;; {:des "left arrow" :rules [[:##left_arrow :vk_none :internal]]}
        ;; {:des "left arrow" :rules [:internal [:##left_arrow :vk_none nil {:alone :!STtab}]]}
        ;; {:des "up arrow" :rules [[:##up_arrow :vk_none :internal]]}
        ;; {:des "down arrow" :rules [[:##down_arrow :vk_none :internal]]}
        ;; {:des "right arrow" :rules [[:##right_arrow :vk_none :internal]]}
        ;; {:des "right arrow" :rules [:internal [:##right_arrow :vk_none nil {:alone :!Ttab}]]}

        ;;reparing function keys
;;        {:des "spotlight (f4) to launchpad" :rules [[:spotlight :f16]]}

        ;; {:des "mouse"
        ;;  :rules [:mouse
        ;;          [:j {:mkey {:y 1036}} [:mouse]]
        ;;          [:k {:mkey {:y -1036}} [:mouse]]
        ;;          [:h {:mkey {:x -1036}} [:mouse]]
        ;;          [:l {:mkey {:x 1036}} [:mouse]]
        ;;          [:n {:pkey :button1} [:mouse]]
        ;;          [:m {:pkey :button2} [:mouse]]
        ;;          ;TODO: button3
        ;;  ]
        ;; }

        {:des "hyper (caps_lock)"
         :rules [:hyper
                 ; *hyper navigation  
                 [:##k :up_arrow]
                 [:##j :down_arrow]
                 [:##h :left_arrow]
                 [:##l :right_arrow]
                 [:##p :page_up]
                 [:##i :home]
                 [:##o :end]
                 [:##u :page_down]
                 [:##a :return_or_enter]
                 ;;modifiers
                 [:##w :left_command]
                 [:##z :left_option]
                 [:##q :left_control]
                 [:##x :left_shift]
                 [:semicolon :!Oleft_arrow] ; jump one word back (é on HUN keyboard)
                 [:quote :!Oright_arrow] ; jump one word ahead (á on HUN keyboard)
                 [:hyphen :!SOleft_arrow] ; highlight/select previous word (ü on HUN keyboard)
                 [:equal_sign :!SOright_arrow] ; highlight/select next word (ó on HUN keyboard)
                 ; *hyper delete  
                 [:n :!Odelete_or_backspace] ; delete previous word
                 [:m :delete_or_backspace] ; simple backspace
                 [:!Cn :!Cdelete_or_backspace] ; delete back to the beginning of the line
                 [:comma :delete_forward] ; delete forward
                 [:period :!Odelete_forward] ; delete next word
                 [:!Ccomma :!Cdelete_forward] ; delete to the end of the line
                 ; *hyper shortcuts  
                 [:c :!QWERc] ; Alfred clipboard history
                 [:e :!QWERe] ; Alfred emoji search
                 [:s :!QWERs] ; Alfred search snippets
                 [:f :!QWERf] ;Fastdiff Alfred shortcut
                 ]}
;; *launchers
        {:des "l-key (launch mode)"
         :rules [:launch-mode
                 [:1 :!Cbackslash] ; show 1Password mini or fill password
                 [:s [:launch "Safari"]]
                 [:m [:launch "Spotify"]]
                 [:f [:launch "Finder"]]
                 [:c [:launch "Calendar"]]
                ;;  [:g [:launch "Google Chrome"]]
                 [:b [:launch "Firefox"]] ;b for browser i guess
                 [:n [:launch "Notes"]]
                 [:d [:launch "Drafts"]]
                 [:w [:launch "Obsidian"]]
                 [:e [:launch "Mail"]]
                ;;  [:t [:launch "Reminders"]] ;;t for Todoist
                 [:t [:launch "TickTick"]] ;;t for todo
                 [:p [:launch "Photos"]]
                 [:i [:launch "iTerm"]]
                 [:j [:launch "IntelliJ IDEA CE"]]
                 [:v [:launch "Visual Studio Code"]]
                 [:u [[:open "https://www.udemy.com"] [:launch "IntelliJ IDEA CE"] [:launch "Obsidian"]]] 
                 ]}
        {:des "s-key (social)"
         :rules [:s-key
                 [:f [:launch "Messenger"]]
                ;;  [:t [:launch "Telegram Lite"]]
                ;;  [:d [:launch "Discord"]]
                ]}
        {:des "u-key (utilities)"
         :rules [:u-key
                 [:p [:launch "System Preferences"]]
         ]}
        {:des "o-key (open websites)"
         :rules [:o-key
                 [:k [:open "https://docs.google.com/spreadsheets/d/1-quGQWvYoeEuMf1jDeKJUIY-DZytnpBJcL-JrFs6Tvw/edit#gid=656760228"]] ; open my finances spreadsheet 
                 ; if you are interested, a public copy is in the making in English: https://docs.google.com/spreadsheets/d/1EoYVZFFO_S77Lp0awYrRCq44Zz5X2VRgcQG_rdnVlZk/edit?usp=sharing
                 [:t [:open "https://telex.hu"]]
                 [:g [:open "https://github.com"]]
                 [:u [:open "https://www.udemy.com"]]
                 ]}
;; *shortcuts

        {:des "accent keys"
         :rules [:accent
                [:e :semicolon] ;é
                [:u :close_bracket] ;ú
                [:i :grave_accent_and_tilde] ;í
                [:o :equal_sign] ;ó
                [:a :quote] ;á
                [:!Se :!Ssemicolon] ;É
                [:!Su :!Sclose_bracket] ;Ú
                [:!Si :!Sgrave_accent_and_tilde] ;Í
                [:!So :!Sequal_sign] ;Ó
                [:!Sa :!Squote] ;Á

                ]}
        {:des "accent2"
         :rules [:accent2
                [:o :0] ;ö
                [:u :hyphen] ;ü
                [:!So :!S0] ;Ö
                [:!Su :!Shyphen] ;Ü
                ]}
        {:des "accent3"
         :rules [:accent3
                [:o :open_bracket]
                [:u :backslash]
                [:!So :!Sopen_bracket]
                [:!Su :!Sbackslash]
         ]}
        {:des "window management (w-key)"
         :rules [:w-key
                ;  [:s :same_wind_app]
        ; *system shortcuts  
        ; NOTE: you need to specify most of these keyboard shortcuts in System Preferences too
                 [:a :!CTOSh] ; tile window to left side of screen
                 [:d :!CTOSl] ; tile window to right side of screen
                 [:f :!CTf] ; toogle fullscreen 
                 [:t :!Ctab] ; change apps
                ;  [:!St :!CStab]
                 [:y :!Ch] ; hide app
                 [:q :!Cq] ; quit app
                 [:e :!Cw] ; close window
        ; *hammerspoon
                 [:m :!CTOm] ; maximize
                 [:c :!CTOc] ; center window
                 [:k :!CTOk] ; top half
                 [:j :!CTOj] ; bottom half
                 [:h :!CTOh] ; left half
                 [:l :!CTOl] ; right half
                 [:1 :!CTO1] ; maximize window to monitor 1
                 [:2 :!CTO2] ; maximize window to monitor 2
                 [:3 :!CTO3] ; maximize window to monitor 3
                 [:n :!CTOn] ; move window to next monitor
                 [:p :!CTOp] ; move window to previous monitor
                 [:o :!CTOo] ; switch to the next window
                 [:!So :!TOSo] ; switch to the previous window
                 [:s :!TOh] ;show keyboard hint for window switch
                 ]}
        {:des "d-key (essentials)"
         :rules [:d-key
         ; shortcuts
                 [:b :!CTOSb] ; show/hide Bartender items
                 [:c :!Ff14] ; show control center
                 [:a :!Ff15] ; start new amphetamie session
                 [:s :!Ff17] ; search menubar with Alfred
                 [:n :!Ff18] ; toogle darkmode via Alfred shortcut
                 [:k :!Ff19] ; change karabiner profile with Alfred
         ; *text modification ;!TODO
                 ;;;;;;;;;;;;;;;;;;;
        ; *Spotify
                 [:m :!QERm] ; open Spotify playlist in Alfred mini player
                 [:p :!QERp] ;hs.spotify.play/pause
                 [:period :!QERn] ;hs.spotify.next
                 [:comma :!QERi] ;hs.spotify.previous
                 [:i :!QTRi] ;hs.spotify.volumeDown
                 [:o :!QTRo] ;hs.spotify.volumeUp
                 [:spacebar :!QERspacebar] ;hs.spotify.displayCurrentTrack
                 ]}
        {:des "m-key (markdown)"
         :rules [:m-key
                 [:b [:!SOcomma :!SOcomma :!SOcomma :!SOcomma :left_arrow :left_arrow]] ; bold
                 [:i [:!SOcomma :!SOcomma :left_arrow]] ; italic
                 [:1 [:!SO3 :spacebar]] ; heading 1
                 [:2 [:!SO3 :!SO3 :spacebar]] ; heading 2
                 [:3 [:!SO3 :!SO3 :!SO3 :spacebar]] ; heading 3
                 [:4 [:!SO3 :!SO3 :!SO3 :!SO3 :spacebar]] ; heading 4
                 [:5 [:!SO3 :!SO3 :!SO3 :!SO3 :!SO3 :spacebar]] ; heading 5
                 [:s [:!Oclose_bracket :!Oclose_bracket :!Oclose_bracket :!Oclose_bracket :left_arrow :left_arrow]] ; striketrough
                 [:x [:!Oclose_bracket :!Oclose_bracket :left_arrow]] ; alt striketrough
                 [:c [:!Obackslash :!Obackslash :!Obackslash]] ; code block
                 [:j [:!Obackslash :!Obackslash :!Obackslash :j :a :v :a :return_or_enter :return_or_enter :!Obackslash :!Obackslash :!Obackslash :up_arrow]] ; java code block
                 [:q [:!SOx :spacebar]] ; quote
                 [:h [:!S7 :!S7 :!S7 :!S7 :left_arrow :left_arrow]] ; highlight
                 [:t [:slash :spacebar :!O8 :spacebar :!O9 :spacebar]] ; task list
                 [:a [:!SOz :!S4 :slash :slash :slash :slash :!SOx :left_arrow :left_arrow :left_arrow]] ; html comment
                 ]}
        {:des "dot-mode" ;;accessing characters used in programming and hard to reach on HUN keyboard
         :rules [:dot-mode
                 [:q :!Speriod] ;:
                 [:w :!Operiod] ;;
                 [:z :!SOz] ;<
                 [:x :!SOx] ;>
                 ]}
        {:des "workmandead" 
         :rules [:workmandead
                [:3 :!Oclose_bracket] ;~
                [:4 :!Obackslash] ;`
                [:6 :!SO3] ;#
                [:7 :!Oquote] ;^
                ;;
                [:tab :!Speriod] ;:
                [:q :!S5] ;%
                [:w :!O1] ;&
                [:e :!Scomma] ;?
                [:r :!S3] ;+
                [:t :!Oq] ;@
                [:y :!O4] ;$
                [:u :!Sslash] ;_
                [:i :!O8] ;[
                [:o :!O9] ;]
                [:p :!S4] ;!
                ;;;
                [:a :!S6] ;/
                [:s :!S8] ;(
                [:d :!S7] ;=
                [:f :non_us_backslash] ;0
                [:g :!O7] ;{
                [:h :!O0] ;}
                [:j :1]
                [:k :!SOcomma] ;*
                [:l :!S9] ;)
                [:semicolon :slash] ;-
                [:quote :!S2] ;"
                ;;;
                [:left_shift :!Operiod] ;; (not part of workmandead)
                [:z :6]
                [:x :7]
                [:c :8]
                [:v :9]
                [:b :!Ograve_accent_and_tilde] ;|
                [:n :!Ohyphen] ;\
                [:m :2]
                [:comma :3]
                [:period :4]
                [:slash :5]
                ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                ;;workman option
                ;; [:!Onon_us_backslash :!]
         ]}
        {:des "F-keys"
         :rules [:F-keys
                [:q :!Ff1]
                [:w :!Ff2]
                [:e :!Ff3]
                [:r :!Ff4]
                [:t :!Ff5]
                [:y :!Ff6]
                [:u :!Ff7]
                [:i :!Ff8]
                [:o :!Ff9]
                [:p :!Ff10]
                [:open_bracket :!Ff11]
                [:close_bracket :!Ff12]
         ]}
        ;; {:des "moving focus"
        ;;  :rules [:focus-mode
        ;;          [:d :!FTf3]
        ;;          [:n :!FTf4] ; move focus to active or next window
        ;;          [:w :!FTf9] ; move focus to next window
        ;;          ]}
        ;; {:des "control mode"
        ;;  :rules [:q-key
        ;;          [:##non_us_backslash :!Tnon_us_backslash]
        ;;          [:##1 :!T1]
        ;;          [:##2 :!T2]
        ;;          [:##3 :!T3]
        ;;          [:##4 :!T4]
        ;;          [:##5 :!T5]
        ;;          [:##6 :!T6]
        ;;          [:##7 :!T7]
        ;;          [:##8 :!T8]
        ;;          [:##9 :!T9]
        ;;          [:##0 :!T0]
        ;;          [:##hyphen :!Thyphen]
        ;;          [:##equal_sign :!Tequal_sign]
        ;;          [:##w :!Tw]
        ;;          [:##e :!Te]
        ;;          [:##r :!Tr]
        ;;          [:##t :!Tt]
        ;;          [:##y :!Ty]
        ;;          [:##u :!Tu]
        ;;          [:##i :!Ti]
        ;;          [:##o :!To]
        ;;          [:##p :!Tp]
        ;;          [:##open_bracket :!Topen_bracket]
        ;;          [:##close_bracket :!Tclose_bracket]
        ;;          [:##a :!Ta]
        ;;          [:##s :!Ts]
        ;;          [:##d :!Td]
        ;;          [:##f :!Tf]
        ;;          [:##g :!Tg]
        ;;          [:##h :!Th]
        ;;          [:##j :!Tj]
        ;;          [:##k :!Tk]
        ;;          [:##l :!Tl]
        ;;          [:##semicolon :!Tsemicolon]
        ;;          [:##quote :!Tquote]
        ;;          [:##backslash :!Tbackslash]
        ;;          [:##grave_accent_and_tilde :!Tgrave_accent_and_tilde]
        ;;          [:##z :!Tz]
        ;;          [:##x :!Tx]
        ;;          [:##c :!Tc]
        ;;          [:##v :!Tv]
        ;;          [:##b :!Tb]
        ;;          [:##n :!Tn]
        ;;          [:##m :!Tm]
        ;;          [:##comma :!Tcomma]
        ;;          [:##period :!Tperiod]
        ;;          [:##slash :!Tslash]
        ;;         ]}
        ]}